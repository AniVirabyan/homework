
import pygame
import random

pygame.init()
screen = pygame.display.set_mode((1280, 720))
clock = pygame.time.Clock()
running = True
dt = 0

player_pos = pygame.Vector2(screen.get_width() / 2, screen.get_height() / 2)

class Bullet:
    def __init__(self, x, y, direction=pygame.Vector2(0, -1), owner="player"):
        self.pos = pygame.Vector2(x, y)
        self.speed = 300
        self.direction = direction
        self.owner = owner  # –£–∫–∞–∑—ã–≤–∞–µ–º, –∫—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –ø—É–ª–∏ ("player" –∏–ª–∏ "enemy")

    def move(self, dt):
        self.pos += self.direction * self.speed * dt

    def draw(self):
        pygame.draw.circle(screen, "Blue", self.pos, 5)

    def collision_barrier(self, barrier_x_start, barrier_x_end, barrier_y):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å –±–∞—Ä—å–µ—Ä–æ–º
        if self.pos.y <= barrier_y and barrier_x_start <= self.pos.x <= barrier_x_end:
            self.direction.y *= -1  # –û—Ç—Ä–∞–∂–∞–µ–º –ø—É–ª—é –≤–Ω–∏–∑
            self.pos.y = barrier_y + 1  # –ß—É—Ç—å —Å–¥–≤–∏–Ω—É—Ç—å, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å—Ç—Ä—è–ª–∞
            return True
        return False

    def collision_player(self, player_pos, player_width, player_height):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ø–∞–¥–∞–Ω–∏–µ –ø—É–ª–∏ –≤ –∏–≥—Ä–æ–∫–∞
        if self.owner != "player":  # –ò–≥—Ä–æ–∫ –Ω–µ —É–º–∏—Ä–∞–µ—Ç –æ—Ç —Å–≤–æ–∏—Ö –ø—É–ª—å
            if self.pos.x >= player_pos.x - player_width and self.pos.x <= player_pos.x + player_width and self.pos.y >= player_pos.y - player_height and self.pos.y <= player_pos.y + player_height:
                return True
        return False

class Enemy:
    def __init__(self, x, y, width, height, speed):
        self.pos = pygame.Vector2(x, y)
        self.width = width
        self.height = height
        self.speed = speed
        self.bullets = []
        self.target_x = x  # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è –≤—Ä–∞–≥–∞ –ø–æ X
        self.alive = True  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Ä–∞–≥–∞ (–∂–∏–≤/–º–µ—Ä—Ç–≤)

    def move(self, dt):
        if self.alive:  # –ï—Å–ª–∏ –≤—Ä–∞–≥ –∂–∏–≤, –æ–Ω –º–æ–∂–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è
            # –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤—Ä–∞–≥–∞ –ø–æ –æ—Å–∏ X
            direction = self.target_x - self.pos.x  # –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è
            if direction > 0:
                self.pos.x += min(self.speed * dt, direction)  # –ü–ª–∞–≤–Ω–æ –¥–≤–∏–≥–∞–µ–º—Å—è –≤–ø—Ä–∞–≤–æ
            elif direction < 0:
                self.pos.x += max(-self.speed * dt, direction)  # –ü–ª–∞–≤–Ω–æ –¥–≤–∏–≥–∞–µ–º—Å—è –≤–ª–µ–≤–æ

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –≤—Ä–∞–≥–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —ç–∫—Ä–∞–Ω–∞ –ø–æ X
            if self.pos.x < 0:
                self.pos.x = 0
            if self.pos.x + self.width > screen.get_width():
                self.pos.x = screen.get_width() - self.width

    def shoot(self):
        # –í—Ä–∞–≥ —Å—Ç—Ä–µ–ª—è–µ—Ç –≤–Ω–∏–∑ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 1%
        if random.random() < 0.01:  # 1% —à–∞–Ω—Å –≤—ã—Å—Ç—Ä–µ–ª–∞
            bullet = Bullet(self.pos.x + self.width // 2, self.pos.y + self.height)  # –ü—É–ª—è –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∏–∑ —Ü–µ–Ω—Ç—Ä–∞ –≤—Ä–∞–≥–∞
            bullet.direction = pygame.Vector2(0, 1)  # –°—Ç—Ä–µ–ª—è–µ–º –≤–Ω–∏–∑
            bullet.owner = "enemy"  # –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –ø—É–ª—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≤—Ä–∞–≥—É
            self.bullets.append(bullet)

    def update(self, dt):
        if self.alive:  # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Ä–∞–≥ –∂–∏–≤
            self.move(dt)
            self.shoot()
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É–ª–∏ –≤—Ä–∞–≥–∞
            for bullet in self.bullets[:]:
                bullet.move(dt)
                bullet.draw()

    def draw(self):
        if self.alive:  # –†–∏—Å—É–µ–º –≤—Ä–∞–≥–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –∂–∏–≤
            pygame.draw.rect(screen, "Green", (self.pos.x, self.pos.y, self.width, self.height))

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∞—Ä—å–µ—Ä–∞
barrier_x_start = 200  # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –±–∞—Ä—å–µ—Ä–∞ –ø–æ X
barrier_x_end = 500  # –ö–æ–Ω–µ—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –±–∞—Ä—å–µ—Ä–∞ –ø–æ X
barrier_y = 400  # –ü–æ–∑–∏—Ü–∏—è –±–∞—Ä—å–µ—Ä–∞ –ø–æ Y
barrier_speed_x = 100  # –°–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è –±–∞—Ä—å–µ—Ä–∞ –ø–æ –æ—Å–∏ X

# –ò–≥—Ä–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã
bullets = []
enemy = Enemy(500, 100, 50, 50, 100)  # –í—Ä–∞–≥ –Ω–∞ —ç–∫—Ä–∞–Ω–µ

# –î–≤–∏–≥–∞–µ–º –∏–≥—Ä–æ–∫–∞, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –≤—ã—Ö–æ–¥–∏–ª –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç–∫—Ä–∞–Ω–∞
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill("purple")

    # üîπ –î–≤–∏–≥–∞–µ–º –±–∞—Ä—å–µ—Ä –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ
    barrier_x_start += barrier_speed_x * dt
    barrier_x_end += barrier_speed_x * dt

    # üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –±–∞—Ä—å–µ—Ä –Ω–µ –≤—ã—Ö–æ–¥–∏–ª –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç–∫—Ä–∞–Ω–∞
    if barrier_x_start <= 0 or barrier_x_end >= screen.get_width():
        barrier_speed_x *= -1  # –ú–µ–Ω—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ

    # üîπ –†–∏—Å—É–µ–º –∏–≥—Ä–æ–∫–∞
    pygame.draw.circle(screen, "red", player_pos, 40)

    # üîπ –†–∏—Å—É–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –±–∞—Ä—å–µ—Ä
    pygame.draw.line(screen, "white", (barrier_x_start, barrier_y), (barrier_x_end, barrier_y), 5)

    # üîπ –î–≤–∏–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –≤—ã—Ö–æ–¥–∏–ª –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã
    keys = pygame.key.get_pressed()

    if keys[pygame.K_w] and player_pos.y - 40 > 0:  # –í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ —ç–∫—Ä–∞–Ω–∞
        player_pos.y -= 300 * dt
    if keys[pygame.K_s] and player_pos.y + 40 < screen.get_height():  # –ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ —ç–∫—Ä–∞–Ω–∞
        player_pos.y += 300 * dt
    if keys[pygame.K_a] and player_pos.x - 40 > 0:  # –õ–µ–≤—ã–π –∫—Ä–∞–π —ç–∫—Ä–∞–Ω–∞
        player_pos.x -= 300 * dt
    if keys[pygame.K_d] and player_pos.x + 40 < screen.get_width():  # –ü—Ä–∞–≤—ã–π –∫—Ä–∞–π —ç–∫—Ä–∞–Ω–∞
        player_pos.x += 300 * dt

    # üîπ –°—Ç—Ä–µ–ª—å–±–∞
    if keys[pygame.K_SPACE]:
        bullets.append(Bullet(player_pos.x, player_pos.y - 40, direction=pygame.Vector2(0, -1)))  # –°—Ç—Ä–µ–ª—è–µ–º –≤–≤–µ—Ä—Ö

    # üîπ –û–±–Ω–æ–≤–ª—è–µ–º –∏ —Ä–∏—Å—É–µ–º –ø—É–ª–∏ –∏–≥—Ä–æ–∫–∞
    for bullet in bullets[:]:
        bullet.move(dt)
        bullet.draw()
        if bullet.collision_barrier(barrier_x_start, barrier_x_end, barrier_y):
            continue  # –ü—É–ª—è —Å—Ç–æ–ª–∫–Ω—É–ª–∞—Å—å —Å –±–∞—Ä—å–µ—Ä–æ–º –∏ –∏–∑–º–µ–Ω–∏–ª–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ –ø—É–ª–∏ —Å –≤—Ä–∞–≥–æ–º
        if bullet.owner == "player":  # –ò–≥—Ä–æ–∫ —Å—Ç—Ä–µ–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≤—Ä–∞–≥–∞
            # –ï—Å–ª–∏ –ø—É–ª—è –ø–æ–ø–∞–ª–∞ –≤ –≤—Ä–∞–≥–∞
            if enemy.pos.x <= bullet.pos.x <= enemy.pos.x + enemy.width and enemy.pos.y <= bullet.pos.y <= enemy.pos.y + enemy.height:
                print("Enemy hit!")
                enemy.width -= 10  # –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –≤—Ä–∞–≥–∞ –ø—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏
                if enemy.width <= 0:
                    print("Enemy destroyed!")
                    enemy.alive = False  # –í—Ä–∞–≥ —É–Ω–∏—á—Ç–æ–∂–µ–Ω
                    print("You Win!")  # –ò–≥—Ä–æ–∫ –ø–æ–±–µ–¥–∏–ª

    # üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Ä–∏—Å–æ–≤–∞–Ω–∏–µ –ø—É–ª—å –≤—Ä–∞–≥–∞
    enemy.update(dt)

    # üîπ –†–∏—Å—É–µ–º –≤—Ä–∞–≥–∞
    enemy.draw()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ø–∞–¥–∞–Ω–∏–µ –ø—É–ª–∏ –≤—Ä–∞–≥–∞ –≤ –∏–≥—Ä–æ–∫–∞
    for enemy_bullet in enemy.bullets[:]:
        if enemy_bullet.collision_player(player_pos, 40, 40):
            print("Game Over!")
            running = False

    pygame.display.flip()
    dt = clock.tick(60) / 1000  # –î–µ–ª—å—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏

pygame.quit()
